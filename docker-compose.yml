services:
  mongo:
    image: mongo:7.0
    container_name: mongo
    ports:
      - "27017:27017"
    networks:
      - hypesoft-network
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped
    env_file:
      - ./backend/.env
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 20s
      retries: 10

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.3
    container_name: keycloak
    command: start-dev
    ports:
      - "8080:8080"
    networks:
      - hypesoft-network
    env_file:
      - ./backend/.env
    environment:
      KC_DB: mongo
      KC_DB_URL: mongodb://root:example@mongo:27017/keycloak?authSource=admin
      KC_DB_USERNAME: root
      KC_DB_PASSWORD: example
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    depends_on:
      mongo:
        condition: service_healthy
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "5000:5000"
    networks:
      - hypesoft-network
    env_file:
      - ./backend/.env
    depends_on:
      mongo:
        condition: service_healthy
      keycloak:
        condition: service_started
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    networks:
      - hypesoft-network
    env_file:
      - ./frontend/.env.local
    depends_on:
      backend:
        condition: service_started
      keycloak:
        condition: service_started
    restart: unless-stopped

  nginx:
    image: nginx:1.25
    container_name: nginx
    ports:
      - "80:80"
    networks:
      - hypesoft-network
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      frontend:
        condition: service_started
      backend:
        condition: service_started
    restart: unless-stopped

networks:
  hypesoft-network:
    driver: bridge

volumes:
  mongo_data:
